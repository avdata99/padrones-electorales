install.packages("dplyr")
Sys.getenv()
R
Sys
Sys.info()
install.packages(plyr)
"plyr"
install.packages("plyr")
dnis <- aggregate(. ~ DNI, data = df, FUN = length)
setwd("~/Repos/pdelboca/padrones-electorales/R Scripts")
df <- read.csv('../datos_limpios.csv')
agg <- aggregate(DNI ~ Domicilio + Padron, data = df, FUN = length)
agg <- agg[order(agg$DNI, decreasing = TRUE),]
dnis <- aggregate(. ~ DNI, data = df, FUN = length)
View(dnis)
dnis <- aggregate(Padron ~ DNI, data = df, FUN = length)
dnis <- aggregate(Padron ~ DNI, data = df, FUN = length)
dnis <- aggregate(. ~ DNI, data = df, FUN = length)
View(dnis)
library(plyr)
count(df, Domicilio)
count(df$Domicilio)
?count
df[df$DNI == 6494801,]
View(df)
dnis <- dnis[dnis$Padron > 1]
dnis <- dnis[dnis$Padron > 1, ]
dnis <- aggregate(. ~ DNI, data = df, FUN = length)
dnis <- dnis[dnis$Padron > 1, ]
View(dnis)
dnis$DNI
df[df$DNI %in% dnis$DNI,]
personasRepetidas <- df[df$DNI %in% dnis$DNI,]
personasRepetidas <- personasRepetidas[order(personasRepetidas$DNI),]
personasRepetidas
unique(personasRepetidas$DNI)
length(unique(personasRepetidas$DNI))
votantesPorDomicilio <- data.frame()
for (padron in unique(df$Padron)){
rbind(votantesPorDomicilio, head(agg[agg$Padron == padron,]))
}
votantesPorDomicilio
votantesPorDomicilio <- data.frame()
for (padron in unique(df$Padron)){
votantesPorDomicilio <- rbind(votantesPorDomicilio, head(agg[agg$Padron == padron,]))
}
votantesPorDomicilio
colnames(votantesPorDomicilio) <- c("Domicilio", "Padron", "Votantes")
votantesPorDomicilio
cant = 10
votantesPorDomicilio <- data.frame()
for (padron in unique(df$Padron)){
votantesPorDomicilio <- rbind(votantesPorDomicilio, head(agg[agg$Padron == padron,], n=cant))
}
colnames(votantesPorDomicilio) <- c("Domicilio", "Padron", "Votantes")
votantesPorDomicilio
df <- read.csv('../datos_limpios.csv')
summary(df$Clase)
df <- read.csv('../datos_limpios.csv')
summary(df$Clase)
sp <- read.csv('../padronesListos/San-Pedro-San-Alberto/', header = FALSE)
sp <- read.csv('../padronesListos/San-Pedro-San-Alberto/San-Pedro-San-Alberto-2015.csv', header = FALSE)
sp$V3
split(sp$V3, " ")
strsplit(sp$V3, " ")
apply(sp$V3, strsplit(" "))
apply(sp$V3, FUN = strsplit(split = " "))
strsplit("Hola Mundo", split = " ")
strsplit(sp$V3, split = " ")
strsplit(as.character(sp$V3), split = " ")
strsplit(as.character(sp$V3), split = " ")[0]
x <- strsplit(as.character(sp$V3), split = " ")
typeof(x)
as.data.frame(x)
do.call(x)
x[0]
lapply(strsplit(as.character(sp$V3), " "), "[", 1)
sp$Clase <- lapply(strsplit(as.character(sp$V3), " "), "[", 1)
sp$Clase
sp
head(sp$Clase)
head(sp)
lapply(strsplit(as.character(sp$V3), " "), "[", 1)
lapply(strsplit(as.character(sp$V3), " "), 1)
lapply(strsplit(as.character(sp$V3), " "), "[")
lapply(strsplit(as.character(sp$V3), " "), "[", 2, 3)
lapply(strsplit(as.character(sp$V3), " "), "[", 2)
x <- strsplit(sp$V3, split = " ")
as.character(
x <- strsplit(as.character(sp$V3), split = " ")
ldply(x)
df <- read.csv('../datos_limpios.csv')
summary(df)
clases <- head(df[order(df$Clase),], n = 100)
clases
clases <- head(df[order(df$Clase),], n = 1000)
summary(clases)
install.packages(lubridate)
install.packages("lubridate")
sort(df$DNI)
sort(df$DNI)[1:10]
df[df$DNI %in% sort(df$DNI)[1:10],]
df[df$DNI %in% sort(df$DNI)[1:50],]
hist(df$Clase, bins=20)
hist(df$Clase, bins=30)
hist(df$Clase, bin=30)
hist(df$Clase, breaks = seq(min(df$Clase), max(df$Clase), 30))
hist(df$Clase, breaks = seq(min(df$Clase, na.rm = True), max(df$Clase), 30))
hist(df$Clase, breaks = seq(min(df$Clase, na.rm = TRUE), max(df$Clase, na.rm = TRUE ), 30))
hist(df$Clase, breaks = seq(1920, 2000, 30))
hist(df$Clase, breaks = seq(1900, 2000, 30))
hist(df$Clase, breaks = seq(1800, 2000, 30))
min(df$Clase)
min(df$Clase,na.rm = TRUE)
max(df$Clase, na.rm = TRUE)
hist(df$Clase, breaks = seq(1914, 1999, 30))
hist(df$Clase, breaks = seq(1914, 1999, 10))
hist(df$Clase, breaks = seq(1914, 1999))
hist(df$Clase, breaks = seq(1914, 1999),main = "Histograma Clase Votantes")
hist(df$Clase, breaks = seq(1914, 1999), labels = seq(1914, 1999),main = "Histograma Clase Votantes")
hist(df$Clase, breaks = 20, labels = seq(1914, 1999) ,main = "Histograma Clase Votantes")
hist(df$Clase, breaks = 50, labels = seq(1914, 1999) ,main = "Histograma Clase Votantes")
hist(df$Clase, breaks = 100, labels = seq(1914, 1999) ,main = "Histograma Clase Votantes")
# Cantidad de Votantes por Clase
minClase <- min(df$Clase, na.rm = TRUE)
maxClase <- max(df$Clase, na.rm = TRUE)
minDocument <- df[df$Clase == minClase,]
minDocument
minClase
df$Clase == minClase
sum(df$Clase == minClase)
minDocument <- df[!is.na(df) & df$Clase == minClase,]
minDocument
minDocument <- df[!is.na(df$Clase) & df$Clase == minClase,]
minDocument
minDocument <- min(minDocument$DNI)
minDocument
maxDocument <- df[!is.na(df$Clase) & df$Clase == maxClase,]
maxDocument <- max(maxDocument$DNI)
maxDocument
df[df$DNI == maxDocument,]
range(df$Clase, na.rm = TRUE)
minClase, maxClase <- range(df$Clase, na.rm = TRUE)
?seq
seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase) )
dnisRange <- seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase))
cut(df$DNI,seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase))
)
x <- cut(df$DNI,seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase))
x <- cut(df$DNI,seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase)))
seq_along()
x <- cut(df$DNI,seq(from = minDocument, to = maxDocument, length.out = (maxClase - minClase)))
x[0]
x
x[1]
1233 in x[1]
1233 %in% x[1]
8000000 %in% x[1]
800000 %in% x[1]
80000 %in% x[1]
80000000 %in% x[1]
x[1]
x[1][0]
typeof(x[1])
800000 == x[1]
80000 == x[1]
8000 == x[1]
8000000 == x[1]
dnisRange
cut(df$DNI,100)
?cut
dnisRange
seq(df$Clase, length.out = (maxClase - minClase))
cut(df$Clase)
cut(df$Clase, breaks=maxClase-minClase)
seq(minClase,maxClase)
dnisRange
dnisRange[1,-1]
dnisRange[1:-1]
dnisRange[1:81]
dnisRange[1:84]
c(0,dnisRange[1:84])
claseTable <- data.frame()
claseTable$Clase <- seq(minClase, maxClase)
claseTable <- NULL
claseTable$Clase <- seq(minClase, maxClase)
claseTable$From <- c(0,dnisRange[1:84])
claseTable$To <- dnisRange
claseTable
claseTable <- data.frame(seq(minClase, maxClase), c(0,dnisRange[1:84]), dnisRange)
as.data.frame(claseTable)
claseTable$Clase <- seq(minClase, maxClase + 1)
claseTable$From <- c(0,dnisRange[1:84])
claseTable$To <- dnisRange
as.data.frame(claseTable)
claseTable$Clase <- seq(minClase, maxClase - 1)
claseTable$From <- c(0,dnisRange[1:84])
claseTable$To <- dnisRange
as.data.frame(claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:length(dnisRange))){
if(dni > claseTable$From[i] & dni < claseTable$To){
print(claseTable$Clase[i])
}
}
}
getClass(32925916,claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:length(dnisRange))){
if(dni > claseTable$From[i] & dni < claseTable$To){
claseTable$Clase[i]
}
}
}
getClass(32925916,claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:length(claseTable))){
if(dni > claseTable$From[i] & dni < claseTable$To){
claseTable$Clase[i]
}
}
}
getClass(32925916,claseTable)
length(claseTable)
nrow(claseTable)
claseTable <- as.data.frame(claseTable)
nrow(claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:nrow(claseTable))){
if(dni > claseTable$From[i] & dni < claseTable$To){
claseTable$Clase[i]
}
}
}
getClass(32925916,claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:nrow(claseTable))){
if(dni > claseTable$From[i]){
claseTable$Clase[i]
}
}
}
getClass(32925916,claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:nrow(claseTable))){
if(dni > claseTable$From[i]){
print(claseTable$Clase[i])
}
}
}
getClass(32925916,claseTable)
getClass <- function(dni, claseTable){
for(i in seq(1:nrow(claseTable))){
if(dni < claseTable$To[i]){
print(claseTable$Clase[i])
}
}
}
getClass <- function(dni, claseTable){
for(i in seq(1:nrow(claseTable))){
if(dni < claseTable$To[i]){
print(claseTable$Clase[i])
}
}
}
getClass(32925916,claseTable)
claseTable
sum(is.na(df$Clase))
sum(!is.na(df$Clase))
sum(is.na(df$Clase)) / nrow(df)
print("ASD", sum(!is.na(df$Clase)) / nrow(df))
print(sum(!is.na(df$Clase)) / nrow(df)) * 100)
print(sum(!is.na(df$Clase)) / nrow(df) * 100)
sum(!is.na(df$Clase))
print(sum(!is.na(df$Clase)) / nrow(df))
sum(is.na(df$Clase))
sum(is.na(df$Clase)) / nrow(df)
hist(df$Clase, breaks = 100, main = "Histograma Clase Votantes")
library(lubridate)
df$EdadAproximada <- year(Sys.Date()) - df$Clase
hist(df$EdadAproximada, breaks = 100, main = "Histograma Clase Votantes")
df[df$EdadAproximada > 100, ]
df[!is.na(df$EdadAproximada & df$EdadAproximada > 100, ]
df[!is.na(df$EdadAproximada) & df$EdadAproximada > 100, ]
hist(df$EdadAproximada, breaks = 100, main = "Histograma Edad Votantes", xlab = "Edad")
hist(df$Clase, breaks = 100, main = "Histograma Clase Votantes", xlab = "Clase")
votantesPorDomicilio
cant = 20
votantesPorDomicilio <- data.frame()
for (padron in unique(df$Padron)){
votantesPorDomicilio <- rbind(votantesPorDomicilio, head(agg[agg$Padron == padron,], n=cant))
}
colnames(votantesPorDomicilio) <- c("Domicilio", "Padron", "Votantes")
votantesPorDomicilio
View(votantesPorDomicilio)
agg[agg$Padron == "Villa Allende", agg$DNI > 8, ]
agg[agg$Padron == "Villa Allende" & agg$DNI > 8, ]
agg[agg$DNI > 8, ]
y <- agg[agg$DNI > 8, ]
y[order(y$Padron),]
write.csv(votantesPorDomicilio)
summary(votantesPorDomicilio)
write.csv(votantesPorDomicilio, file = "votantes_por_domicilio.csv")
personasRepetidas
write.csv(personasRepetidas, file = "personas_repetidas.csv")
personasRepetidas$ID <- NULL
write.csv(personasRepetidas, file = "personas_repetidas.csv")
personasRepetidas
write.csv(votantesPorDomicilio[,c("Domicilio", "Padron", "Votantes")], file = "votantes_por_domicilio.csv")
write.csv(votantesPorDomicilio[,c("Domicilio", "Padron", "Votantes")], file = "votantes_por_domicilio.csv")
?write.csv
write.csv(votantesPorDomicilio, file = "votantes_por_domicilio.csv", row.names = FALSE)
write.csv(personasRepetidas, file = "personas_repetidas.csv", row.names = FALSE)
hist(df$Clase, breaks = 100, main = "Histograma Clase Votantes", xlab = "Clase")
df[!is.na(df$EdadAproximada) & df$EdadAproximada > 100, ]
df[!is.na(df$EdadAproximada) & df$EdadAproximada > 90, ]
write.csv(mayoresACien, file = "votantes_mayores_a_100.csv", row.names = FALSE)
mayoresACien <- df[!is.na(df$EdadAproximada) & df$EdadAproximada > 100, ]
write.csv(mayoresACien, file = "votantes_mayores_a_100.csv", row.names = FALSE)
mayoresACien$ID <- NULL
write.csv(mayoresACien, file = "votantes_mayores_a_100.csv", row.names = FALSE)
